{"C:\\workspace\\TrieTypeScript\\tests\\node.spec.ts":{"path":"C:\\workspace\\TrieTypeScript\\tests\\node.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":21,"column":3}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":4},"end":{"line":9,"column":7}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":44}},"7":{"start":{"line":10,"column":4},"end":{"line":12,"column":7}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":40}},"9":{"start":{"line":13,"column":4},"end":{"line":15,"column":7}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":47}},"11":{"start":{"line":16,"column":4},"end":{"line":20,"column":7}},"12":{"start":{"line":17,"column":20},"end":{"line":17,"column":40}},"13":{"start":{"line":18,"column":8},"end":{"line":18,"column":31}},"14":{"start":{"line":19,"column":8},"end":{"line":19,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":34},"end":{"line":5,"column":35}},"loc":{"start":{"line":5,"column":46},"end":{"line":21,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":30},"end":{"line":7,"column":31}},"loc":{"start":{"line":7,"column":42},"end":{"line":9,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":28},"end":{"line":10,"column":29}},"loc":{"start":{"line":10,"column":40},"end":{"line":12,"column":5}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":32},"end":{"line":13,"column":33}},"loc":{"start":{"line":13,"column":44},"end":{"line":15,"column":5}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":16,"column":42},"end":{"line":16,"column":43}},"loc":{"start":{"line":16,"column":54},"end":{"line":20,"column":5}},"line":16}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1},"b":{},"inputSourceMap":{"version":3,"file":"C:/workspace/TrieTypeScript/tests/node.spec.ts","sources":["C:/workspace/TrieTypeScript/tests/node.spec.ts"],"names":[],"mappings":";;AAAA,6BAA8B;AAE9B,oCAAmC;AAEnC,QAAQ,CAAC,uBAAuB,EAAE;IAChC,IAAM,IAAI,GAAG,IAAI,WAAI,CAAC,GAAG,CAAC,CAAC;IAE3B,EAAE,CAAC,qBAAqB,EAAE;QACxB,aAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE;QACtB,aAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,uBAAuB,EAAE;QAC1B,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,iCAAiC,EAAE;QACpC,IAAM,KAAK,GAAG,IAAI,WAAI,CAAC,GAAG,CAAC,CAAC;QAE5B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QACvB,aAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from 'chai';\r\n\r\nimport { Node } from '../src/node';\r\n\r\ndescribe(\"Trie Node class Tests\", () => {\r\n  const node = new Node(\"a\");\r\n\r\n  it(\"should have value a\", () => {\r\n    assert.equal(node.char, \"a\");\r\n  });\r\n\r\n  it(\"should not be end\", () => {\r\n    assert.isFalse(node.end);\r\n  });\r\n  it(\"should have no childs\", () => {\r\n    assert.lengthOf(node.childs, 0);\r\n  });\r\n  it(\"should have a child with char a\", () => {\r\n    const child = new Node(\"a\");\r\n\r\n    node.childs[0] = child;\r\n    assert.isTrue(node.get(\"a\"));\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"91b5af6a55a3f268b2a2bbf32be526a157ae2ecf","contentHash":"5643bf8781d6e74ab360294c5b6987bfce2a1ac7c750c668622e93a6d26498d6"},"C:\\workspace\\TrieTypeScript\\src\\node.ts":{"path":"C:\\workspace\\TrieTypeScript\\src\\node.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":26},"end":{"line":22,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":44}},"4":{"start":{"line":6,"column":30},"end":{"line":6,"column":42}},"5":{"start":{"line":7,"column":8},"end":{"line":7,"column":25}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":25}},"7":{"start":{"line":9,"column":8},"end":{"line":9,"column":23}},"8":{"start":{"line":10,"column":8},"end":{"line":10,"column":25}},"9":{"start":{"line":12,"column":4},"end":{"line":20,"column":6}},"10":{"start":{"line":13,"column":8},"end":{"line":18,"column":9}},"11":{"start":{"line":13,"column":22},"end":{"line":13,"column":23}},"12":{"start":{"line":13,"column":30},"end":{"line":13,"column":41}},"13":{"start":{"line":14,"column":24},"end":{"line":14,"column":30}},"14":{"start":{"line":15,"column":12},"end":{"line":17,"column":32}},"15":{"start":{"line":16,"column":16},"end":{"line":17,"column":32}},"16":{"start":{"line":17,"column":20},"end":{"line":17,"column":32}},"17":{"start":{"line":19,"column":8},"end":{"line":19,"column":21}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":16}},"19":{"start":{"line":23,"column":0},"end":{"line":23,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":26},"end":{"line":4,"column":27}},"loc":{"start":{"line":4,"column":38},"end":{"line":22,"column":1}},"line":4},"1":{"name":"Node","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":17}},"loc":{"start":{"line":5,"column":29},"end":{"line":11,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":25},"end":{"line":12,"column":26}},"loc":{"start":{"line":12,"column":40},"end":{"line":20,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":44}},"type":"if","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":44}},{"start":{"line":6,"column":8},"end":{"line":6,"column":44}}],"line":6},"1":{"loc":{"start":{"line":15,"column":12},"end":{"line":17,"column":32}},"type":"if","locations":[{"start":{"line":15,"column":12},"end":{"line":17,"column":32}},{"start":{"line":15,"column":12},"end":{"line":17,"column":32}}],"line":15},"2":{"loc":{"start":{"line":16,"column":16},"end":{"line":17,"column":32}},"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":17,"column":32}},{"start":{"line":16,"column":16},"end":{"line":17,"column":32}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":47,"4":47,"5":47,"6":47,"7":47,"8":47,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":1},"f":{"0":1,"1":47,"2":1},"b":{"0":[47,0],"1":[1,0],"2":[1,0]},"inputSourceMap":{"version":3,"file":"C:/workspace/TrieTypeScript/src/node.ts","sources":["C:/workspace/TrieTypeScript/src/node.ts"],"names":[],"mappings":";;;AAAA;IAKE,cAAY,IAAa,EAAE,GAAW;QAAX,oBAAA,EAAA,WAAW;QAJtC,QAAG,GAAY,KAAK,CAAC;QACrB,WAAM,GAAW,EAAE,CAAC;QAIlB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,kBAAG,GAAH,UAAI,GAAW;QACb,KAAoB,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAAE;YAA5B,IAAM,KAAK,SAAA;YACd,IAAI,OAAO,KAAK,KAAK,SAAS;gBAC5B,IAAI,GAAG,KAAK,KAAK,CAAC,IAAI;oBAAE,OAAO,IAAI,CAAC;SACvC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IACH,WAAC;AAAD,CAAC,AAlBD,IAkBC;AAlBY,oBAAI","sourcesContent":["export class Node {\r\n  end: boolean = false;\r\n  childs: Node[] = [];\r\n  char: string | undefined;\r\n\r\n  constructor(char?: string, end = false) {\r\n    this.end = end;\r\n    this.char = char;\r\n  }\r\n\r\n  get(key: string): boolean {\r\n    for (const child of this.childs) {\r\n      if (typeof child !== undefined)\r\n        if (key === child.char) return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c604a29e5e232a5763b011790b109fcd0815a3d9","contentHash":"37056a5e54bd5c3beee18e8ce92252ecf36b5b9d09e4235b7b15cb9a6f41a17d"},"C:\\workspace\\TrieTypeScript\\tests\\trie.spec.ts":{"path":"C:\\workspace\\TrieTypeScript\\tests\\trie.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":12},"end":{"line":5,"column":99}},"4":{"start":{"line":6,"column":12},"end":{"line":10,"column":1}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":79}},"7":{"start":{"line":8,"column":36},"end":{"line":8,"column":75}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":40}},"9":{"start":{"line":9,"column":25},"end":{"line":9,"column":37}},"10":{"start":{"line":11,"column":16},"end":{"line":11,"column":23}},"11":{"start":{"line":12,"column":0},"end":{"line":24,"column":3}},"12":{"start":{"line":13,"column":4},"end":{"line":16,"column":7}},"13":{"start":{"line":14,"column":19},"end":{"line":14,"column":30}},"14":{"start":{"line":15,"column":8},"end":{"line":15,"column":69}},"15":{"start":{"line":17,"column":4},"end":{"line":23,"column":7}},"16":{"start":{"line":18,"column":19},"end":{"line":18,"column":30}},"17":{"start":{"line":19,"column":23},"end":{"line":19,"column":44}},"18":{"start":{"line":20,"column":8},"end":{"line":20,"column":137}},"19":{"start":{"line":20,"column":111},"end":{"line":20,"column":132}},"20":{"start":{"line":21,"column":8},"end":{"line":21,"column":137}},"21":{"start":{"line":21,"column":111},"end":{"line":21,"column":132}},"22":{"start":{"line":22,"column":8},"end":{"line":22,"column":100}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":12},"end":{"line":6,"column":13}},"loc":{"start":{"line":6,"column":24},"end":{"line":10,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":18},"end":{"line":8,"column":19}},"loc":{"start":{"line":8,"column":34},"end":{"line":8,"column":77}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":11},"end":{"line":9,"column":12}},"loc":{"start":{"line":9,"column":23},"end":{"line":9,"column":39}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":12,"column":29},"end":{"line":12,"column":30}},"loc":{"start":{"line":12,"column":41},"end":{"line":24,"column":1}},"line":12},"4":{"name":"(anonymous_4)","decl":{"start":{"line":13,"column":51},"end":{"line":13,"column":52}},"loc":{"start":{"line":13,"column":63},"end":{"line":16,"column":5}},"line":13},"5":{"name":"(anonymous_5)","decl":{"start":{"line":17,"column":49},"end":{"line":17,"column":50}},"loc":{"start":{"line":17,"column":61},"end":{"line":23,"column":5}},"line":17},"6":{"name":"(anonymous_6)","decl":{"start":{"line":20,"column":95},"end":{"line":20,"column":96}},"loc":{"start":{"line":20,"column":109},"end":{"line":20,"column":134}},"line":20},"7":{"name":"(anonymous_7)","decl":{"start":{"line":21,"column":95},"end":{"line":21,"column":96}},"loc":{"start":{"line":21,"column":109},"end":{"line":21,"column":134}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":29},"end":{"line":20,"column":135}},"type":"cond-expr","locations":[{"start":{"line":20,"column":72},"end":{"line":20,"column":78}},{"start":{"line":20,"column":81},"end":{"line":20,"column":135}}],"line":20},"1":{"loc":{"start":{"line":20,"column":29},"end":{"line":20,"column":69}},"type":"binary-expr","locations":[{"start":{"line":20,"column":29},"end":{"line":20,"column":46}},{"start":{"line":20,"column":50},"end":{"line":20,"column":69}}],"line":20},"2":{"loc":{"start":{"line":21,"column":29},"end":{"line":21,"column":135}},"type":"cond-expr","locations":[{"start":{"line":21,"column":72},"end":{"line":21,"column":78}},{"start":{"line":21,"column":81},"end":{"line":21,"column":135}}],"line":21},"3":{"loc":{"start":{"line":21,"column":29},"end":{"line":21,"column":69}},"type":"binary-expr","locations":[{"start":{"line":21,"column":29},"end":{"line":21,"column":46}},{"start":{"line":21,"column":50},"end":{"line":21,"column":69}}],"line":21},"4":{"loc":{"start":{"line":22,"column":28},"end":{"line":22,"column":95}},"type":"cond-expr","locations":[{"start":{"line":22,"column":71},"end":{"line":22,"column":77}},{"start":{"line":22,"column":80},"end":{"line":22,"column":95}}],"line":22},"5":{"loc":{"start":{"line":22,"column":28},"end":{"line":22,"column":68}},"type":"binary-expr","locations":[{"start":{"line":22,"column":28},"end":{"line":22,"column":45}},{"start":{"line":22,"column":49},"end":{"line":22,"column":68}}],"line":22}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":9,"8":1,"9":2,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0},"f":{"0":1,"1":9,"2":2,"3":1,"4":1,"5":1,"6":0,"7":0},"b":{"0":[0,1],"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"C:/workspace/TrieTypeScript/tests/trie.spec.ts","sources":["C:/workspace/TrieTypeScript/tests/trie.spec.ts"],"names":[],"mappings":";;AAAA,6BAA8B;AAE9B,oCAAmC;AAEnC,IAAM,KAAK,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;AAErG,IAAM,KAAK,GAAG;IACZ,IAAM,IAAI,GAAG,IAAI,WAAI,EAAE,CAAA;IAEvB,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAA/B,CAA+B,CAAC,CAAA;IACtD,OAAO,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC;AACpB,CAAC,CAAA;AACD,IAAM,SAAS,GAAG,KAAK,EAAE,CAAC;AAE1B,QAAQ,CAAC,kBAAkB,EAAE;IAC3B,EAAE,CAAC,0CAA0C,EAAE;QAC7C,IAAM,IAAI,GAAG,SAAS,EAAE,CAAC;QAEzB,aAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAA;IACvD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,wCAAwC,EAAE;QAC3C,IAAM,IAAI,GAAG,SAAS,EAAE,CAAC;QACzB,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;QAEtC,aAAM,CAAC,MAAM,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,KAAK,MAAM,EAAb,CAAa,CAAC,CAAC,CAAA;QAClD,aAAM,CAAC,MAAM,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,KAAK,MAAM,EAAb,CAAa,CAAC,CAAC,CAAA;QAClD,aAAM,CAAC,KAAK,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,EAAE,CAAC,CAAC,CAAA;IACnC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from 'chai';\r\n\r\nimport { Trie } from '../src/trie';\r\n\r\nconst names = ['Anna', 'Bea', 'Christine', 'Lina', 'Lisa', 'Lotta', 'Petronella', 'Petunia', 'Pölly']\r\n\r\nconst setUp = () => {\r\n  const trie = new Trie()\r\n  \r\n  names.forEach(name => trie.insert(name.toLowerCase()))\r\n  return () => trie;\r\n}\r\nconst setUpTrie = setUp();\r\n\r\ndescribe(\"Trie class Tests\", () => {\r\n  it(\"Should have the same size as names array\", () => {\r\n    const trie = setUpTrie();\r\n\r\n    assert.equal(trie.getTrieList().length, names.length)     \r\n  });\r\n  it(\"Should return two match names for 'li'\", () => {\r\n    const trie = setUpTrie();\r\n    const prefixes = trie.findPrefix('li')\r\n    \r\n    assert.isTrue(prefixes?.some(pf => pf === 'lisa'))\r\n    assert.isTrue(prefixes?.some(pf => pf === 'lina'))\r\n    assert.equal(prefixes?.length, 2)\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8af265e8edf92268faecf8d36c619733a6f0ea30","contentHash":"c0a8902c80d156a29e6845ad54696ba09fcf6bbaaff2ddeb2d31fdd79ed0d216"},"C:\\workspace\\TrieTypeScript\\src\\trie.ts":{"path":"C:\\workspace\\TrieTypeScript\\src\\trie.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":26},"end":{"line":101,"column":3}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":53}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":38}},"6":{"start":{"line":10,"column":4},"end":{"line":20,"column":6}},"7":{"start":{"line":11,"column":21},"end":{"line":11,"column":48}},"8":{"start":{"line":13,"column":8},"end":{"line":14,"column":22}},"9":{"start":{"line":14,"column":12},"end":{"line":14,"column":22}},"10":{"start":{"line":15,"column":8},"end":{"line":16,"column":22}},"11":{"start":{"line":16,"column":12},"end":{"line":16,"column":22}},"12":{"start":{"line":17,"column":8},"end":{"line":18,"column":22}},"13":{"start":{"line":18,"column":12},"end":{"line":18,"column":22}},"14":{"start":{"line":19,"column":8},"end":{"line":19,"column":78}},"15":{"start":{"line":21,"column":4},"end":{"line":32,"column":6}},"16":{"start":{"line":22,"column":19},"end":{"line":22,"column":28}},"17":{"start":{"line":23,"column":8},"end":{"line":30,"column":9}},"18":{"start":{"line":23,"column":21},"end":{"line":23,"column":22}},"19":{"start":{"line":24,"column":23},"end":{"line":24,"column":29}},"20":{"start":{"line":25,"column":24},"end":{"line":25,"column":44}},"21":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"22":{"start":{"line":27,"column":16},"end":{"line":27,"column":59}},"23":{"start":{"line":29,"column":12},"end":{"line":29,"column":38}},"24":{"start":{"line":31,"column":8},"end":{"line":31,"column":24}},"25":{"start":{"line":33,"column":4},"end":{"line":43,"column":6}},"26":{"start":{"line":34,"column":19},"end":{"line":34,"column":28}},"27":{"start":{"line":35,"column":8},"end":{"line":41,"column":9}},"28":{"start":{"line":35,"column":21},"end":{"line":35,"column":22}},"29":{"start":{"line":36,"column":23},"end":{"line":36,"column":29}},"30":{"start":{"line":37,"column":24},"end":{"line":37,"column":44}},"31":{"start":{"line":38,"column":12},"end":{"line":39,"column":29}},"32":{"start":{"line":39,"column":16},"end":{"line":39,"column":29}},"33":{"start":{"line":40,"column":12},"end":{"line":40,"column":38}},"34":{"start":{"line":42,"column":8},"end":{"line":42,"column":20}},"35":{"start":{"line":44,"column":4},"end":{"line":46,"column":6}},"36":{"start":{"line":45,"column":8},"end":{"line":45,"column":54}},"37":{"start":{"line":47,"column":4},"end":{"line":57,"column":6}},"38":{"start":{"line":48,"column":8},"end":{"line":49,"column":31}},"39":{"start":{"line":49,"column":12},"end":{"line":49,"column":31}},"40":{"start":{"line":50,"column":8},"end":{"line":51,"column":29}},"41":{"start":{"line":51,"column":12},"end":{"line":51,"column":29}},"42":{"start":{"line":52,"column":8},"end":{"line":55,"column":9}},"43":{"start":{"line":52,"column":21},"end":{"line":52,"column":22}},"44":{"start":{"line":53,"column":12},"end":{"line":54,"column":65}},"45":{"start":{"line":54,"column":16},"end":{"line":54,"column":65}},"46":{"start":{"line":56,"column":8},"end":{"line":56,"column":20}},"47":{"start":{"line":58,"column":4},"end":{"line":60,"column":6}},"48":{"start":{"line":59,"column":8},"end":{"line":59,"column":52}},"49":{"start":{"line":61,"column":4},"end":{"line":71,"column":6}},"50":{"start":{"line":62,"column":8},"end":{"line":63,"column":31}},"51":{"start":{"line":63,"column":12},"end":{"line":63,"column":31}},"52":{"start":{"line":64,"column":8},"end":{"line":65,"column":31}},"53":{"start":{"line":65,"column":12},"end":{"line":65,"column":31}},"54":{"start":{"line":66,"column":8},"end":{"line":70,"column":9}},"55":{"start":{"line":66,"column":21},"end":{"line":66,"column":22}},"56":{"start":{"line":67,"column":26},"end":{"line":67,"column":40}},"57":{"start":{"line":68,"column":12},"end":{"line":69,"column":61}},"58":{"start":{"line":69,"column":16},"end":{"line":69,"column":61}},"59":{"start":{"line":72,"column":4},"end":{"line":87,"column":6}},"60":{"start":{"line":73,"column":18},"end":{"line":73,"column":20}},"61":{"start":{"line":74,"column":19},"end":{"line":74,"column":28}},"62":{"start":{"line":75,"column":8},"end":{"line":85,"column":9}},"63":{"start":{"line":75,"column":21},"end":{"line":75,"column":22}},"64":{"start":{"line":76,"column":12},"end":{"line":76,"column":27}},"65":{"start":{"line":77,"column":24},"end":{"line":77,"column":49}},"66":{"start":{"line":78,"column":12},"end":{"line":80,"column":13}},"67":{"start":{"line":79,"column":16},"end":{"line":79,"column":26}},"68":{"start":{"line":81,"column":12},"end":{"line":84,"column":13}},"69":{"start":{"line":82,"column":16},"end":{"line":82,"column":47}},"70":{"start":{"line":83,"column":16},"end":{"line":83,"column":42}},"71":{"start":{"line":86,"column":8},"end":{"line":86,"column":49}},"72":{"start":{"line":88,"column":4},"end":{"line":99,"column":6}},"73":{"start":{"line":89,"column":8},"end":{"line":89,"column":40}},"74":{"start":{"line":90,"column":8},"end":{"line":91,"column":30}},"75":{"start":{"line":91,"column":12},"end":{"line":91,"column":30}},"76":{"start":{"line":92,"column":8},"end":{"line":98,"column":9}},"77":{"start":{"line":92,"column":21},"end":{"line":92,"column":22}},"78":{"start":{"line":93,"column":12},"end":{"line":96,"column":13}},"79":{"start":{"line":94,"column":16},"end":{"line":94,"column":58}},"80":{"start":{"line":95,"column":16},"end":{"line":95,"column":87}},"81":{"start":{"line":97,"column":12},"end":{"line":97,"column":24}},"82":{"start":{"line":100,"column":4},"end":{"line":100,"column":16}},"83":{"start":{"line":102,"column":0},"end":{"line":102,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":26},"end":{"line":5,"column":27}},"loc":{"start":{"line":5,"column":38},"end":{"line":101,"column":1}},"line":5},"1":{"name":"Trie","decl":{"start":{"line":6,"column":13},"end":{"line":6,"column":17}},"loc":{"start":{"line":6,"column":20},"end":{"line":9,"column":5}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":31},"end":{"line":10,"column":32}},"loc":{"start":{"line":10,"column":47},"end":{"line":20,"column":5}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":28},"end":{"line":21,"column":29}},"loc":{"start":{"line":21,"column":43},"end":{"line":32,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":25},"end":{"line":33,"column":26}},"loc":{"start":{"line":33,"column":40},"end":{"line":43,"column":5}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":44,"column":33},"end":{"line":44,"column":34}},"loc":{"start":{"line":44,"column":45},"end":{"line":46,"column":5}},"line":44},"6":{"name":"(anonymous_6)","decl":{"start":{"line":47,"column":36},"end":{"line":47,"column":37}},"loc":{"start":{"line":47,"column":65},"end":{"line":57,"column":5}},"line":47},"7":{"name":"(anonymous_7)","decl":{"start":{"line":58,"column":35},"end":{"line":58,"column":36}},"loc":{"start":{"line":58,"column":47},"end":{"line":60,"column":5}},"line":58},"8":{"name":"(anonymous_8)","decl":{"start":{"line":61,"column":38},"end":{"line":61,"column":39}},"loc":{"start":{"line":61,"column":61},"end":{"line":71,"column":5}},"line":61},"9":{"name":"(anonymous_9)","decl":{"start":{"line":72,"column":32},"end":{"line":72,"column":33}},"loc":{"start":{"line":72,"column":50},"end":{"line":87,"column":5}},"line":72},"10":{"name":"(anonymous_10)","decl":{"start":{"line":88,"column":35},"end":{"line":88,"column":36}},"loc":{"start":{"line":88,"column":65},"end":{"line":99,"column":5}},"line":88}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":8},"end":{"line":14,"column":22}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":14,"column":22}},{"start":{"line":13,"column":8},"end":{"line":14,"column":22}}],"line":13},"1":{"loc":{"start":{"line":15,"column":8},"end":{"line":16,"column":22}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":16,"column":22}},{"start":{"line":15,"column":8},"end":{"line":16,"column":22}}],"line":15},"2":{"loc":{"start":{"line":17,"column":8},"end":{"line":18,"column":22}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":18,"column":22}},{"start":{"line":17,"column":8},"end":{"line":18,"column":22}}],"line":17},"3":{"loc":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},{"start":{"line":26,"column":12},"end":{"line":28,"column":13}}],"line":26},"4":{"loc":{"start":{"line":38,"column":12},"end":{"line":39,"column":29}},"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":39,"column":29}},{"start":{"line":38,"column":12},"end":{"line":39,"column":29}}],"line":38},"5":{"loc":{"start":{"line":48,"column":8},"end":{"line":49,"column":31}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":49,"column":31}},{"start":{"line":48,"column":8},"end":{"line":49,"column":31}}],"line":48},"6":{"loc":{"start":{"line":50,"column":8},"end":{"line":51,"column":29}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":51,"column":29}},{"start":{"line":50,"column":8},"end":{"line":51,"column":29}}],"line":50},"7":{"loc":{"start":{"line":53,"column":12},"end":{"line":54,"column":65}},"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":54,"column":65}},{"start":{"line":53,"column":12},"end":{"line":54,"column":65}}],"line":53},"8":{"loc":{"start":{"line":53,"column":17},"end":{"line":53,"column":75}},"type":"cond-expr","locations":[{"start":{"line":53,"column":52},"end":{"line":53,"column":58}},{"start":{"line":53,"column":61},"end":{"line":53,"column":75}}],"line":53},"9":{"loc":{"start":{"line":53,"column":17},"end":{"line":53,"column":49}},"type":"binary-expr","locations":[{"start":{"line":53,"column":17},"end":{"line":53,"column":30}},{"start":{"line":53,"column":34},"end":{"line":53,"column":49}}],"line":53},"10":{"loc":{"start":{"line":62,"column":8},"end":{"line":63,"column":31}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":63,"column":31}},{"start":{"line":62,"column":8},"end":{"line":63,"column":31}}],"line":62},"11":{"loc":{"start":{"line":64,"column":8},"end":{"line":65,"column":31}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":65,"column":31}},{"start":{"line":64,"column":8},"end":{"line":65,"column":31}}],"line":64},"12":{"loc":{"start":{"line":68,"column":12},"end":{"line":69,"column":61}},"type":"if","locations":[{"start":{"line":68,"column":12},"end":{"line":69,"column":61}},{"start":{"line":68,"column":12},"end":{"line":69,"column":61}}],"line":68},"13":{"loc":{"start":{"line":78,"column":12},"end":{"line":80,"column":13}},"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":80,"column":13}},{"start":{"line":78,"column":12},"end":{"line":80,"column":13}}],"line":78},"14":{"loc":{"start":{"line":81,"column":12},"end":{"line":84,"column":13}},"type":"if","locations":[{"start":{"line":81,"column":12},"end":{"line":84,"column":13}},{"start":{"line":81,"column":12},"end":{"line":84,"column":13}}],"line":81},"15":{"loc":{"start":{"line":90,"column":8},"end":{"line":91,"column":30}},"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":91,"column":30}},{"start":{"line":90,"column":8},"end":{"line":91,"column":30}}],"line":90},"16":{"loc":{"start":{"line":93,"column":12},"end":{"line":96,"column":13}},"type":"if","locations":[{"start":{"line":93,"column":12},"end":{"line":96,"column":13}},{"start":{"line":93,"column":12},"end":{"line":96,"column":13}}],"line":93}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":53,"8":53,"9":0,"10":53,"11":0,"12":53,"13":1,"14":52,"15":1,"16":9,"17":9,"18":9,"19":51,"20":51,"21":51,"22":44,"23":51,"24":9,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1,"37":1,"38":45,"39":44,"40":45,"41":9,"42":45,"43":45,"44":433,"45":44,"46":45,"47":1,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":1,"61":1,"62":1,"63":1,"64":2,"65":2,"66":2,"67":0,"68":2,"69":2,"70":2,"71":1,"72":1,"73":1,"74":1,"75":0,"76":1,"77":1,"78":1,"79":0,"80":0,"81":1,"82":1,"83":1},"f":{"0":1,"1":1,"2":53,"3":9,"4":0,"5":1,"6":45,"7":0,"8":0,"9":1,"10":1},"b":{"0":[0,53],"1":[0,53],"2":[1,52],"3":[44,7],"4":[0,0],"5":[44,1],"6":[9,36],"7":[44,389],"8":[0,433],"9":[433,433],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,2],"14":[2,0],"15":[0,1],"16":[0,1]},"inputSourceMap":{"version":3,"file":"C:/workspace/TrieTypeScript/src/trie.ts","sources":["C:/workspace/TrieTypeScript/src/trie.ts"],"names":[],"mappings":"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","sourcesContent":["import { Node } from './node';\r\n\r\nexport class Trie {\r\n  private readonly alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\r\n  root: Node;\r\n\r\n  constructor() {\r\n    this.root = new Node();\r\n  }\r\n\r\n  findIndex(char: string) {\r\n    const charAt = this.alphabet.indexOf(char);\r\n\r\n    // \"fulhack\" for swedish letters as the order gets all wrong\r\n    if (char === \"å\") return 27;\r\n    if (char === \"ä\") return 28;\r\n    if (char === \"ö\") return 29;\r\n\r\n    return this.alphabet.charCodeAt(charAt) - this.alphabet.charCodeAt(0);\r\n  }\r\n\r\n  insert(key: string) {\r\n    let node: Node = this.root;\r\n\r\n    for (let i = 0; i < key.length; i++) {\r\n      const char = key[i];\r\n      const index = this.findIndex(char);\r\n\r\n      if (node.childs[index] === undefined) {\r\n        node.childs[index] = new Node(char);\r\n      }\r\n      node = node.childs[index];\r\n    }\r\n    node.end = true;\r\n  }\r\n\r\n  get(key: string) {\r\n    let node = this.root;\r\n\r\n    for (let i = 0; i < key.length; i++) {\r\n      const char = key[i];\r\n      const index = this.findIndex(char);\r\n\r\n      if (node.childs[index] === undefined) return false;\r\n      node = node.childs[index];\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getTrieList() {\r\n    return this.getTrieListRec(this.root, \"\", []);\r\n  }\r\n\r\n  private getTrieListRec(node: Node, chars: string, list: string[]): string[] {\r\n    if (node.char) chars += node.char;\r\n    if (node.end) list.push(chars);\r\n    for (let i = 0; i < node.childs.length; i++) {\r\n      if (node?.childs[i] !== undefined)\r\n        this.getTrieListRec(node.childs[i], chars, list);\r\n    }\r\n    return list;\r\n  }\r\n\r\n  printTrieFast() {\r\n    return this.printTrieFastRec(this.root, \"\");\r\n  }\r\n\r\n  private printTrieFastRec(node: Node, chars: string) {\r\n    if (node.char) chars += node.char;\r\n    if (node.end) console.log(chars);\r\n    for (let i = 0; i < node.childs.length; i++) {\r\n      const element = node.childs[i];\r\n\r\n      if (element) this.printTrieFastRec(node.childs[i], chars);\r\n    }\r\n  }\r\n\r\n  findPrefix(search: string) {\r\n    let str = \"\";\r\n    let node = this.root;\r\n\r\n    for (let i = 0; i < search.length; i++) {\r\n      console.log(i);\r\n      let index = this.findIndex(search[i]);\r\n      if (node.childs[index] === undefined) {\r\n        return [];\r\n      }\r\n      if (search[i] === node.childs[index].char) {\r\n        str += node.childs[index].char;\r\n        node = node.childs[index];\r\n      }\r\n    }\r\n    return this.findPrefixRec(node, str, []);\r\n  }\r\n\r\n  private findPrefixRec(node: Node, prefix: string, list: string[]) {\r\n    console.log(list, prefix, node);\r\n    if (node.end) list.push(prefix);\r\n    for (let i = 0; i < node.childs.length; i++) {\r\n      if (node.childs[i] !== undefined) {\r\n        console.log(node.childs[i], prefix, list);\r\n        this.findPrefixRec(node.childs[i], prefix + node.childs[i].char, list);\r\n      }\r\n      return list;\r\n    }\r\n  }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"654f593cb020c0dd0707bd0763643d9648b74c5a","contentHash":"45e60570093a53930a5f3cfc48774e17a51a30b8f2da8a17ea9cd89fdd8793cc"}}